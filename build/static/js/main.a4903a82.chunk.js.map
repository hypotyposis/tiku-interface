{"version":3,"sources":["pages/training/TrainingPage.module.css","App.module.css","layouts/mainLayout/MainLayout.module.css","components/header/Header.module.css","assets/logo.svg","components/header/Header.tsx","components/footer/Footer.tsx","redux/hooks.ts","redux/problemset/slice.ts","components/singleSelection/SingleSelection.tsx","components/prismCode/PrismCode.tsx","components/matrix/Matrix.tsx","components/richTextEditor/RTE.tsx","components/highlight/Highlight.tsx","components/contest/Contest.tsx","layouts/mainLayout/MainLayout.tsx","pages/home/HomePage.tsx","pages/training/TrainingPage.tsx","pages/admin/AdminPage.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/singleSelection/SingleSelection.module.css","components/matrix/Matrix.module.css"],"names":["module","exports","Header","history","useHistory","className","styles","inner","src","logo","alt","Text","Group","size","onClick","push","Title","level","title","Footer","style","textAlign","useSelector","useReduxSelector","enableMapSet","initialState","answers","Map","problemSetSlice","createSlice","name","reducers","update","state","action","console","log","pair","payload","set","SingleSelection","index","id","score","questionDescriptions","type","choices","useState","answeredQuestions","setAnsweredQuestions","dispatch","problemSet","useDispatch","useEffect","setTimeout","Prism","highlightAll","choiceClickHandler","e","a","input","target","questionId","optionValue","defaultValue","prev","next","actions","cardContainer","href","map","d","questionDescription","textContainer","content","imageContainer","codeContainer","fulfillSingleSelection","optionsContainer","value","choiceA","choiceB","choiceC","choiceD","scoreContainer","React","Component","Link","Anchor","Matrix","top","offsetTop","matrixContainer","matrixTitle","blockContainer","questions","q","block","has","filledBlock","nonfilledBlock","RTE","editorRef","useRef","linkImgCallback","onlineVideoCallback","video","onChange","html","onBlur","onFocus","apiKey","onInit","evt","editor","current","initialValue","init","height","menubar","plugins","toolbar","content_style","getContent","ClassicEditor","data","onReady","event","getData","hljs","registerLanguage","cpp","Highlight","props","nodeRef","highlight","querySelectorAll","forEach","node","highlightBlock","createRef","this","ref","dangerouslySetInnerHTML","__html","Contest","MainLayout","children","HomePage","contests","c","TrainingPage","mainContainer","backTop","AdminPage","App","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","reducer","store","configureStore","devTools","ReactDOM","StrictMode","rootStore","document","getElementById"],"mappings":"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","file":"static/js/main.a4903a82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"TrainingPage_mainContainer__2L9cN\",\"backTop\":\"TrainingPage_backTop__1scQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page-content\":\"MainLayout_page-content__MRoWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-header\":\"Header_app-header__3U82T\",\"top-header\":\"Header_top-header__1Ua6u\",\"inner\":\"Header_inner__3b3NM\",\"button-group\":\"Header_button-group__1Dxrp\",\"main-header\":\"Header_main-header__OC3nw\",\"App-logo\":\"Header_App-logo__3z1ki\",\"title\":\"Header_title__3_fub\",\"search-input\":\"Header_search-input__19kTQ\",\"main-menu\":\"Header_main-menu__iZfNm\",\"App-logo-spin\":\"Header_App-logo-spin__2JzXp\"};","export default __webpack_public_path__ + \"static/media/logo.e68152e0.svg\";","import React from \"react\";\nimport styles from \"./Header.module.css\";\nimport logo from \"../../assets/logo.svg\";\nimport { Layout, Typography, Input, Menu, Button, Dropdown } from \"antd\";\nimport { GlobalOutlined } from \"@ant-design/icons\";\nimport { useHistory, useLocation, useParams, useRouteMatch } from \"react-router-dom\";\n\nexport const Header: React.FC = () => {\n  const history = useHistory();\n    return (\n        <div className={styles[\"app-header\"]}>\n          {/* top-header */}\n          <div className={styles[\"top-header\"]}>\n          <div className={styles.inner}>\n            <img src={logo} alt=\"logo\" className={styles[\"App-logo\"]} />\n              <Typography.Text>AC编程 - 题库</Typography.Text>\n              <Button.Group className={styles[\"button-group\"]}>\n                <Button size=\"large\" onClick={() => history.push(\"register\")}>注册</Button>\n                <Button size=\"large\" onClick={() => history.push(\"signIn\")}>登录</Button>\n              </Button.Group>\n            </div>\n          </div>\n          <Layout.Header className={styles[\"main-header\"]}>\n            <span onClick={() => history.push(\"/\")}>\n              <Typography.Title level={3} className={styles.title}>\n                CSP 2020 提高组第一轮\n              </Typography.Title>\n            </span>\n          </Layout.Header>\n        </div>\n      );\n}","import React from \"react\";\nimport { Layout, Typography } from \"antd\";\n\nexport const Footer: React.FC = () => {\n  return (\n    <Layout.Footer>\n      <Typography.Title level={3} style={{ textAlign: \"center\" }}>\n        Developed by AC 编程 Dev Team , © AC 编程\n      </Typography.Title>\n    </Layout.Footer>\n  );\n};\n","import {\n    useSelector as useReduxSelector,\n    TypedUseSelectorHook,\n  } from \"react-redux\";\n  import { RootState } from \"./store\";\n  \nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { enableMapSet } from 'immer';\nimport questions from \"../../mockdata/questions.json\";\n\nenableMapSet();\n\ninterface ProblemSetState {\n    // completedQuestions: Set<string>;\n    answers: Map<string, string>\n}\n\nconst initialState: ProblemSetState = {\n    // completedQuestions: new Set(),\n    answers: new Map()\n}\n\nexport const problemSetSlice = createSlice({\n    name: 'problemSet',\n    initialState,\n    reducers: {\n        update: (state, action) => {\n            // state.completedQuestions = action.payload;\n            console.log(action)\n            const [pair, ] = action.payload;\n            console.log(\"pair \", pair)\n            // console.log(key)\n            // console.log(value)\n            state.answers.set(pair[0], pair[1]);\n            console.log(state.answers)\n            // state.answers = action.payload;\n        }\n    }\n})","import React, { useState, useEffect } from 'react';\nimport { renderToStaticMarkup, renderToString } from \"react-dom/server\"\nimport styles from \"./SingleSelection.module.css\"\nimport { Highlight, PrismCode } from \"../../components\"\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/default.css';\nimport Prism from 'prismjs'\n// import \"../../css/okaidia.css\"\nimport \"prismjs/themes/prism-okaidia.css\"\nimport { useSelector } from \"../../redux/hooks\";    \nimport { useDispatch } from \"react-redux\";\nimport {problemSetSlice} from \"../../redux/problemset/slice\"\n\ninterface questionDescriptionProps {\n    content: string;\n    // type: \"text\" | \"image\" | \"code\";\n    type: string,\n}\n\ninterface SingleSelectionProps {\n    index: number;\n    id: string,\n    score: number,\n    // type: \"single selection\" | \"multi selection\" | \"fill in blank\",\n    type: string,\n    questionDescriptions: Array<questionDescriptionProps>,\n    choices: any\n}\n\nconst fulfillSingleSelection = (questionDescription: questionDescriptionProps) => {\n    switch (questionDescription.type) {\n        case \"text\":\n            return (<div className={styles.textContainer}>\n                <p>{questionDescription.content}</p>\n                </div>\n            )\n        case \"image\":\n            return (\n                <div className={styles.imageContainer}>\n                    <img src={questionDescription.content} />\n                </div>\n            )\n        case \"code\":\n            return (\n                <>\n                <div className={styles.codeContainer}>\n                    {/* <PrismCode \n                        code={questionDescription.content}\n                        language=\"cpp\"\n                        plugins={[\"line-numbers\", \"show-language\"]}\n                    /> */}\n                    <Highlight content={`<pre><code>` + questionDescription.content  + `</code></pre>`} />\n                </div>\n                </>\n            )\n    }\n}\n\n\nexport const SingleSelection: React.FC<SingleSelectionProps> = ({index, id, score, type, questionDescriptions, choices}) => {\n\n    const [answeredQuestions, setAnsweredQuestions] = useState(new Map());\n    const answers = useSelector((state) => state.problemSet.answers)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        console.log(\"componentDidMount\")\n        setTimeout(() => Prism.highlightAll(), 0)\n        return () => {\n            console.log(\"componentWillUnmount\")\n        }\n    }, [])\n\n    // useEffect(() => Prism.highlightAll())\n    \n    const choiceClickHandler = async(e) => {\n        // console.log(\"click event: \", e)\n        const input = e.target;\n        const questionId = input.name;\n        const optionValue = input.defaultValue;\n        await setAnsweredQuestions((prev) => {\n            console.log(\"prev \", prev)\n            const next = prev;\n            next.set(questionId, optionValue);\n            console.log(\"next \", next)\n            return next;\n        })\n        console.log(\"answeredQuestions \", answeredQuestions);\n        dispatch(problemSetSlice.actions.update(answeredQuestions))\n    }\n\n    return (\n        <div className={styles.cardContainer}>\n            <h3 id={id}>\n                <span>单选题 { index + 1 }</span>\n                <a href={\"#\" + id} className=\"anchor\"></a>\n            </h3>\n            <ul>\n                {questionDescriptions.map((d) => {\n                    return fulfillSingleSelection(d)\n                })}\n            </ul>\n            {/* <div className={styles.codeContainer} style={{marginLeft:'40px'}}>\n                <pre>\n                    <code className=\"language-javascript\">\n                    {`\n                        onSubmit(e) {\n                        e.preventDefault();\n                        const job = {\n                            title: 'Developer',\n                            company: 'Facebook' \n                            };\n                        }\n                    `}\n                    </code>\n                </pre>\n            </div> */}\n            <ol className={styles.optionsContainer}>\n                <li>\n                    <div><input type=\"radio\" name={id} value=\"A\" onClick={choiceClickHandler}/>{choices.choiceA}</div>\n                    <div><input type=\"radio\" name={id} value=\"B\" onClick={choiceClickHandler}/>{choices.choiceB}</div>\n                    <div><input type=\"radio\" name={id} value=\"C\" onClick={choiceClickHandler}/>{choices.choiceC}</div>\n                    <div><input type=\"radio\" name={id} value=\"D\" onClick={choiceClickHandler}/>{choices.choiceD}</div>\n                </li>\n            </ol>\n            <span className={styles.scoreContainer}>分值: {score}</span>\n        </div>\n      );\n}","import React from \"react\"\nimport Prism from \"prismjs\"\n// import \"../../css/okaidia.css\"\nimport \"prismjs/themes/prism-okaidia.css\"\n\ninterface IPrismProps {\n    code: string;\n    plugins: any;\n    language: string;\n}\n\nexport class PrismCode extends React.Component<IPrismProps> {\n    ref: React.RefObject<HTMLInputElement>;\n    \n    constructor(props) {\n        super(props)\n        this.ref = React.createRef();\n    }\n    componentDidMount() {\n        this.highlight()\n    }\n    componentDidUpdate() {\n        this.highlight()\n    }\n    highlight = () => {\n        if (this.ref && this.ref.current) {\n        Prism.highlightElement(this.ref.current)\n        }\n        // if (this.ref && this.ref.current) {\n        //     const nodes = this.ref.current.querySelectorAll('pre');\n        //     nodes.forEach((node) => {\n        //         Prism.highlightElement(node);\n        //     })\n        // }\n    }\n    render() {\n        const { code, plugins, language } = this.props\n        return (\n        <pre className={!plugins ? \"\" : plugins.join(\" \")}>\n            <code ref={this.ref} className={`language-${language}`}>\n            {code.trim()}\n            </code>\n        </pre>\n        )\n    }\n}","import React, { useEffect, useState, useLayoutEffect } from 'react';\nimport { useSelector } from \"../../redux/hooks\";  \nimport { Affix, Anchor, Button } from 'antd';\nimport styles from \"./Matrix.module.css\"\nimport questions from \"../../mockdata/questions.json\";\nimport { problemSetSlice } from '../../redux/problemset/slice';\n\nconst { Link } = Anchor;\n\ninterface IBlockProps {\n    id: number;\n}\n\nexport const Matrix: React.FC = () => {\n    const [top, setTop] = useState(10);\n    const [bottom, setBottom] = useState(10);\n    const answeredQuestions = useSelector((state) => state.problemSet.answers);\n\n    const questionList: Array<string> = [];\n    const answeredQuestionIndex: Array<number> = [];\n\n    // //initialize question list\n    // useEffect(() => {\n    //     questions.map((q, index) => {\n    //         questionList.push(q.id);\n    //     });\n    // }, [])\n\n    // useEffect(() => {\n    //     questions.map((q, index) => {\n    //         questionList.push(q.id);\n    //     });\n    //     console.log(\"answers update: \", answeredQuestions);\n    //     console.log(\"question list \", questionList);\n    //     answeredQuestions.forEach((value, key) => {\n    //         console.log(\"key: \", key);\n    //         answeredQuestionIndex.push(questionList.indexOf(key));\n    //     })\n    //     console.log(\"indexes updated: \", answeredQuestionIndex)\n    // }, [answeredQuestions])\n\n    return (\n        <Affix offsetTop={top}>\n        <div className={styles.matrixContainer}>\n            <h3 className={styles.matrixTitle}>题目列表</h3>\n            <ul className={styles.blockContainer}>\n                {questions.map((q, index) => {\n                    // return <span>{q.id}</span>\n                    return (\n                        <div className={styles.block}>\n                            <Anchor>\n                                <Link className={answeredQuestions.has(q.id)?styles.filledBlock:styles.nonfilledBlock} href={\"#\" + q.id} title={index + 1} />\n                            </Anchor>\n                        </div>\n                    )\n                })}\n            </ul>\n            </div>\n        </Affix>\n    )\n}","import React, { useState, useEffect, useRef, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from \"./RTE.module.css\"\n// import E from \"wangeditor\"\nimport ReactWEditor from 'wangeditor-for-react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport $ from 'jquery';\nimport Simditor from 'simditor'\nimport \"../../css/simditor.css\"\nimport editor from 'wangeditor/dist/editor';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n\n\nexport const RTE: React.FC = () => {\n    const editorRef:any = useRef(null);\n    const log = () => {\n        if (editorRef.current) {\n        console.log(editorRef.current.getContent());\n        }\n    };\n\n    useEffect(() => {\n        console.log(\"componentDidUpdate\")\n    })\n\n    return (\n        <>\n            <h1>wangeditor</h1>\n            <ReactWEditor\n                defaultValue={'<h1>标题</h1>'}\n                linkImgCallback={(src,alt,href) => {\n                    // 插入网络图片的回调事件\n                    console.log('图片 src ', src)\n                    console.log('图片文字说明',alt)\n                    console.log('跳转链接',href)\n                }}\n                onlineVideoCallback={(video) => {\n                    // 插入网络视频的回调事件\n                    console.log('插入视频内容', video)\n                }}\n                onChange={(html) => {\n                    console.log('onChange html:', html)\n                }}\n                onBlur={(html) => {\n                    console.log('onBlur html:', html)\n                }}\n                onFocus={(html) => {\n                    console.log('onFocus html:', html)\n                }}\n            />\n            <h1>TinyMCE</h1>\n            <Editor\n                apiKey=\"ehyw9ds1s0w3zk78e7a25379gb7s5dw2eqgwg729m72plm2f\"\n                onInit={(evt, editor) => editorRef.current = editor}\n                initialValue=\"<p>This is the initial content of the editor.</p>\"\n                init={{\n                height: 500,\n                menubar: false,\n                plugins: [\n                    'advlist autolink lists link image charmap print preview anchor',\n                    'searchreplace visualblocks code fullscreen',\n                    'insertdatetime media table paste code help wordcount'\n                ],\n                toolbar: 'undo redo | formatselect | ' +\n                'bold italic backcolor | alignleft aligncenter ' +\n                'alignright alignjustify | bullist numlist outdent indent | ' +\n                'removeformat | help',\n                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\n                }}\n            />\n            <button onClick={log}>Log editor content</button>\n            <h2>Using CKEditor 5 build in React</h2>\n                <CKEditor\n                    editor={ ClassicEditor }\n                    data=\"<p>Hello from CKEditor 5!</p>\"\n                    onReady={ editor => {\n                        // You can store the \"editor\" and use when it is needed.\n                        console.log( 'Editor is ready to use!', editor );\n                    } }\n                    onChange={ ( event, editor ) => {\n                        const data = editor.getData();\n                        console.log( { event, editor, data } );\n                    } }\n                    onBlur={ ( event, editor ) => {\n                        console.log( 'Blur.', editor );\n                    } }\n                    onFocus={ ( event, editor ) => {\n                        console.log( 'Focus.', editor );\n                    } }\n                />\n            </>\n    )\n}\n\n// export class SimEditor extends React.Component {\n\n//     constructor(props) {\n//         super(props);\n//     }\n\n//     componentDidMount() {\n//         var editor = new Simditor({\n//             textarea: $('#editor')\n//             //optional options\n//           });\n//     }\n\n//     render() {\n//         return (\n//             <textarea id=\"editor\" placeholder=\"Balabala\"></textarea>\n//         )\n//     }\n// }","import React, { Component } from 'react';\nimport hljs from 'highlight.js';\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport cpp from 'highlight.js/lib/languages/cpp';\nimport 'highlight.js/styles/atom-one-dark.css';\n\n// hljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('cpp', cpp);\n\ninterface IHighlightProps {\n    content: any;\n}\n\nexport class Highlight extends Component<IHighlightProps> {\n    nodeRef: React.RefObject<HTMLInputElement>;\n\n    constructor(props) {\n        super(props);\n        this.nodeRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.highlight();\n    }\n\n    componentDidUpdate() {\n        this.highlight();\n    }\n\n    highlight = () => {\n        if (this.nodeRef.current) {\n            const nodes = this.nodeRef.current.querySelectorAll('pre');\n            nodes.forEach((node) => {\n                hljs.highlightBlock(node);\n            });\n        }\n    }\n\n    render() {\n        const { content } = this.props;\n        return (\n            <div ref={this.nodeRef} dangerouslySetInnerHTML={{ __html: content }} />\n        );\n    }\n}","import React from 'react';\nimport { SingleSelection } from '../../components';\n\ninterface IQuestionsProps {\n    questions: Array<any>\n}\n\nexport const Contest: React.FC<IQuestionsProps> = ({ questions }) => {\n    return (\n        <>\n            <ul>\n                {questions.map((q, index) => (\n                    <SingleSelection index={index} id={q.id} type={q.type} score={q.score} questionDescriptions={q.questionDescriptions} choices={q.choices} />\n                ))}\n            </ul>\n        </>\n    )\n}","import React from \"react\";\nimport styles from \"./MainLayout.module.css\";\nimport { Header, Footer } from \"../../components\";\n\nexport const MainLayout: React.FC = ({ children }) => {\n  return (\n    <>\n      <Header />\n      {/* 页面内容 content */}\n      <div className={styles[\"page-content\"]}>{children}</div>\n      <Footer />\n    </>\n  );\n};\n","import React from 'react';\nimport {\n    Header,\n    Footer,\n} from \"../../components\";\nimport { MainLayout } from \"../../layouts/mainLayout\"\nimport { Row, Col, Typography } from \"antd\";\nimport styles from \"./HomePage.module.css\";\nimport contests from \"../../mockdata/contests.json\"\n\nexport const HomePage: React.FC = () => {\n    return (\n        <>\n            <MainLayout>\n            <h1>题库主页</h1>\n            <ul>\n                {contests.map((c) => {\n                    return (\n                        <h2>\n                        <a href={\"/problemset/\" + c.id}>{c.name}</a>\n                        </h2>\n                    )\n                })}\n                </ul>\n            </MainLayout>\n        </>\n    )\n}","import React from 'react';\nimport {\n    Header,\n    Footer,\n    SingleSelection,\n    Matrix,\n    Contest\n} from \"../../components\";\nimport { MainLayout } from \"../../layouts/mainLayout\"\nimport { Row, Col, Typography, BackTop } from \"antd\";\nimport questions from \"../../mockdata/questions.json\";\nimport styles from \"./TrainingPage.module.css\";\n\nexport const TrainingPage: React.FC = () => {\n    return (\n        <>\n            <MainLayout>\n                {/* <h1>自由练习</h1> */}\n                <div className={styles.mainContainer}>\n                    <Matrix />\n                    <Contest questions={questions} />\n                </div>\n                <BackTop>\n                    <div className={styles.backTop}>UP</div>\n                </BackTop>\n            </MainLayout>\n        </>\n    )\n}","import React from 'react';\nimport { RTE } from '../../components'\nimport styles from \"./AdminPage.module.css\"\n\nexport const AdminPage: React.FC = () => {\n    return (\n        <RTE />\n    )\n}","import React from 'react';\nimport styles from \"./App.module.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { HomePage, TrainingPage, AdminPage } from \"./pages\";\n\nfunction App() {\n  return (\n    <div className={styles.App}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={TrainingPage} />\n          {/* <Route path=\"/signIn\" component={SignInPage} />\n          <Route path=\"/register\" component={RegisterPage} /> */}\n          <Route path=\"/home\" component={HomePage} />\n          <Route path=\"/admin\" component={AdminPage} />\n          <Route render={() => <h1>404 not found 页面去火星了 ！</h1>} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { type } from \"os\";\nimport { problemSetSlice } from \"./problemset/slice\"\n\nconst rootReducer = combineReducers({\n    problemSet: problemSetSlice.reducer\n})\n\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: true\n})\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport default {store}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport rootStore from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={rootStore.store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"SingleSelection_cardContainer__2EG6v\",\"imageContainer\":\"SingleSelection_imageContainer__2Ptn7\",\"codeContainer\":\"SingleSelection_codeContainer__2Z67B\",\"optionsContainer\":\"SingleSelection_optionsContainer__2REfG\",\"scoreContainer\":\"SingleSelection_scoreContainer__1udH1\",\"textContainer\":\"SingleSelection_textContainer__3UtV7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"matrixContainer\":\"Matrix_matrixContainer__3Xqzc\",\"matrixTitle\":\"Matrix_matrixTitle__38OZw\",\"blockContainer\":\"Matrix_blockContainer__3gZGR\",\"block\":\"Matrix_block__PIhCl\",\"nonfilledBlock\":\"Matrix_nonfilledBlock__GxehJ\",\"filledBlock\":\"Matrix_filledBlock__aB0HP\"};"],"sourceRoot":""}